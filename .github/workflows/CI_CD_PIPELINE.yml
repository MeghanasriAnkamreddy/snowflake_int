name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on any branch or tag commit
  push:
    branches:
      - "*"
    tags:
      - "v*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "deploy"
  deploy:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Install SnowSQL
        run: |
          curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowsql-1.2.9-linux_x86_64.bash
          SNOWSQL_DEST=~/bin SNOWSQL_LOGIN_SHELL=~/.profile bash snowsql-1.2.9-linux_x86_64.bash

      - name: Check SnowSQL Version
        run: |
          ~/bin/snowsql --version

      # Fetch and execute the latest committed SQL scripts
      - name: Run Latest SQL Scripts
        env:
          SNOWSQL_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWSQL_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWSQL_PWD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWSQL_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWSQL_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
        run: |
          # Check if there are previous commits
          if git rev-parse --quiet --verify HEAD~1; then
            # Fetch the latest SQL scripts if there are previous commits
            echo "Fetching the latest SQL scripts..."
            git fetch origin
            
            # Get the list of the most recent SQL script files (e.g., *.sql)
            sql_files=$(git diff --name-only HEAD~1 HEAD -- '*.sql')

            # Check if there are any SQL files to execute
            if [ -z "$sql_files" ]; then
              echo "No new SQL scripts found to execute."
            else
              # Loop through each SQL file and execute it
              for sql_file in $sql_files; do
                echo "Executing SQL script: $sql_file"
                output=$(~/bin/snowsql -q "USE DATABASE CI_CD_DEMO; USE SCHEMA DEMO_SCHEMA; EXECUTE IMMEDIATE FROM @$sql_file;")
                echo "$output"
              done
            fi
          else
            echo "No previous commits found. Skipping SQL script execution."
          fi
