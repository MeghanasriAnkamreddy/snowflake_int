name: CI

on:
  push:
    branches:
      - "*"
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch full commit history

      - name: Install SnowSQL
        run: |
          curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowsql-1.2.9-linux_x86_64.bash
          SNOWSQL_DEST=~/bin SNOWSQL_LOGIN_SHELL=~/.profile bash snowsql-1.2.9-linux_x86_64.bash

      - name: Check SnowSQL Version
        run: |
          ~/bin/snowsql --version

      - name: Get the list of modified SQL scripts
        id: modified_files
        run: |
          if git rev-parse HEAD~1 >/dev/null 2>&1; then
            echo "Fetching modified files between HEAD and previous commit..."
            git diff --name-only HEAD~1 HEAD > modified_files.txt
          else
            echo "No previous commit. Fetching all committed files in the current commit..."
            git ls-tree --name-only --full-tree HEAD > modified_files.txt
          fi
          
          echo "Modified files:"
          cat modified_files.txt

          grep -i '\.sql$' modified_files.txt > sql_files.txt || true

          if [ -s sql_files.txt ]; then
            echo "Modified SQL files:"
            cat sql_files.txt
          else
            echo "No SQL files modified."
          fi

      - name: Debug SQL files
        run: |
          echo "SQL files to execute:"
          if [ -f sql_files.txt ]; then
            cat sql_files.txt || echo "sql_files.txt is empty."
          else
            echo "sql_files.txt does not exist."
          fi

      - name: Run SnowSQL Command
        env:
          SNOWSQL_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWSQL_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWSQL_PWD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWSQL_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWSQL_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
        run: |
          # Fetch latest from Snowflake repository
          ~/bin/snowsql -q "ALTER GIT REPOSITORY CI_CD_DEMO.DEMO_SCHEMA.snowflake_extensions FETCH;"

          if [ -s sql_files.txt ]; then
            # Initialize variable to track failures
            FAILED=0

            # Loop through the SQL files and execute
            while IFS= read -r file; do
              echo "Running SQL file: $file"

              # Attempt to run the current SQL file
              ~/bin/snowsql -q "
                USE DATABASE CI_CD_DEMO;
                USE SCHEMA DEMO_SCHEMA;
                EXECUTE IMMEDIATE FROM @snowflake_extensions/branches/main/$file;" || {
                echo "Failed to run $file. Attempting to run previous version of the script."

                # Get the previous version of the SQL file
                previous_file="branches/main/$(git rev-parse HEAD~1):$file"

                # Attempt to run the previous version of the SQL file
                ~/bin/snowsql -q "
                  USE DATABASE CI_CD_DEMO;
                  USE SCHEMA DEMO_SCHEMA;
                  EXECUTE IMMEDIATE FROM @snowflake_extensions/${previous_file};" || {
                  echo "Failed to run previous version of $file."
                  FAILED=1  # Mark as failed if both versions fail
                }
              }

            done < sql_files.txt

            # Check if there was a failure
            if [ $FAILED -eq 1 ]; then
              echo "One or more SQL files failed."
              exit 1  # Exit with failure if any SQL file failed
            fi
          else
            echo "No SQL files to execute."
          fi
