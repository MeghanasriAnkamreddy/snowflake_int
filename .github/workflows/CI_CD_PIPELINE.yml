name: CI with Fallback to Previous Version

on:
  push:
    branches:
      - "*"
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install SnowSQL
        run: |
          curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowsql-1.2.9-linux_x86_64.bash
          SNOWSQL_DEST=~/bin SNOWSQL_LOGIN_SHELL=~/.profile bash snowsql-1.2.9-linux_x86_64.bash

      - name: Check SnowSQL Version
        run: |
          ~/bin/snowsql --version

      - name: Execute SQL with Try-Catch Logic
        env:
          SNOWSQL_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWSQL_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWSQL_PWD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWSQL_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWSQL_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
        run: |
          ~/bin/snowsql -q "ALTER GIT REPOSITORY CI_CD_DEMO.DEMO_SCHEMA.snowflake_extensions FETCH;"

          # Get the latest SQL script file names dynamically
          sql_files=$(git ls-tree -r HEAD --name-only | grep '\.SQL$')

          # Loop through each SQL file and execute
          for latest_file in $sql_files; do
            echo "Trying to execute SQL script: $latest_file..."

            # Execute the SQL script and capture the error output
            error_output=$(~/bin/snowsql -q "USE DATABASE CI_CD_DEMO; USE SCHEMA DEMO_SCHEMA; EXECUTE IMMEDIATE FROM @snowflake_extensions/branches/main/$latest_file" 2>&1)
            status=$?

            # Output the status of the command
            echo "Execution status for $latest_file: $status"
            echo "Error Output: $error_output"

            # Check the exit status of the command
            if [ $status -eq 0 ]; then
              echo "$latest_file executed successfully."
            else
              echo "Failed to execute $latest_file. Error: $error_output"
              echo "Moving to fallback (previous version)..."

              # Construct the path for the previous version
              previous_file="branches/main/$(git rev-parse HEAD~1):$latest_file"
              echo "Attempting to run previous version: $previous_file"

              # Execute the previous version and capture the error output
              error_output_fallback=$(~/bin/snowsql -q "USE DATABASE CI_CD_DEMO; USE SCHEMA DEMO_SCHEMA; EXECUTE IMMEDIATE FROM @snowflake_extensions/${previous_file};" 2>&1)
              status_fallback=$?

              # Output the status of the fallback command
              echo "Execution status for previous version of $latest_file: $status_fallback"
              echo "Fallback Error Output: $error_output_fallback"

              # Check the exit status for the previous version
              if [ $status_fallback -eq 0 ]; then
                echo "Previous version of $latest_file executed successfully."
              else
                echo "Failed to execute both the latest and previous versions of $latest_file. Error: $error_output_fallback"
                exit 1  # Exit with failure if both attempts fail
              fi
            fi
          done
