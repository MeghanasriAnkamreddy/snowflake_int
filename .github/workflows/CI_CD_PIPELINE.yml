name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on any branch or tag commit
  push:
    branches:
      - "*"
    tags:
      - "v*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "deploy"
  deploy:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Install SnowSQL
        run: |
          curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowsql-1.2.9-linux_x86_64.bash
          SNOWSQL_DEST=~/bin SNOWSQL_LOGIN_SHELL=~/.profile bash snowsql-1.2.9-linux_x86_64.bash

      - name: Check SnowSQL Version
        run: |
          ~/bin/snowsql --version

      # Fetch and execute the latest committed SQL scripts
      - name: Run Latest SQL Scripts
        env:
          SNOWSQL_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWSQL_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWSQL_PWD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWSQL_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWSQL_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
        run: |
          # Fetch the latest changes from the remote repository
          echo "Fetching the latest changes..."
          git fetch origin

          # Get the list of files changed in the latest commit
          echo "Fetching all files from the latest commit..."
          sql_files=$(git diff --name-only HEAD~1 HEAD)

          # Filter for SQL files
          sql_files=$(echo "$sql_files" | grep '\.sql$')

          # Check if there are any SQL files to execute
          if [ -z "$sql_files" ]; then
            echo "No new SQL scripts found to execute."
          else
            # Loop through each SQL file and execute it
            for sql_file in $sql_files; do
              echo "Executing SQL script: $sql_file"
              # Execute the SQL script using SnowSQL
              output=$(~/bin/snowsql -q "USE DATABASE CI_CD_DEMO; USE SCHEMA DEMO_SCHEMA; EXECUTE IMMEDIATE FROM @$sql_file;")
              echo "$output"
            done
          fi
